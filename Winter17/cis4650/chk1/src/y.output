Terminals unused in grammar

   ENDFILE
   ERROR
   OPENCOMMENT
   CLOSECOMMENT


State 39 conflicts: 1 reduce/reduce
State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | func_declaration

    6 var_declaration: type_specifier ID SEMICLN
    7                | type_specifier ID LBRACKET NUM RBRACKET SEMICLN
    8                | type_specifier error SEMICLN

    9 type_specifier: INT
   10               | VOID

   11 func_declaration: type_specifier ID LPAREN params RPAREN compound_stmt

   12 params: param_list
   13       | VOID

   14 param_list: param_list COMMA param
   15           | param

   16 param: type_specifier ID
   17      | type_specifier ID LBRACKET RBRACKET
   18      | error

   19 compound_stmt: LBRACE local_declarations statement_list RBRACE

   20 local_declarations: local_declarations var_declaration
   21                   | /* empty */

   22 statement_list: statement_list statement
   23               | /* empty */

   24 statement: expression_stmt
   25          | compound_stmt
   26          | selection_stmt
   27          | iteration_stmt
   28          | return_stmt

   29 expression_stmt: expression SEMICLN
   30                | SEMICLN

   31 selection_stmt: IF LPAREN expression RPAREN statement
   32               | IF LPAREN expression RPAREN statement ELSE statement
   33               | error

   34 iteration_stmt: WHILE LPAREN expression RPAREN statement

   35 return_stmt: RETURN SEMICLN
   36            | RETURN expression SEMICLN

   37 expression: var ASSIGN expression
   38           | simple_expression
   39           | error

   40 var: ID
   41    | ID LBRACKET expression RBRACKET

   42 simple_expression: additive_expression relop additive_expression
   43                  | additive_expression

   44 relop: LT
   45      | GT
   46      | LE
   47      | GE
   48      | EQ
   49      | NE

   50 additive_expression: additive_expression addop term
   51                    | term

   52 addop: PLUS
   53      | MINUS

   54 term: term mulop factor
   55     | factor

   56 mulop: MULTI
   57      | DIVIDE

   58 factor: LPAREN expression RPAREN
   59       | var
   60       | call
   61       | NUM

   62 call: ID LPAREN args RPAREN

   63 args: args_list
   64     | /* empty */

   65 args_list: args_list COMMA expression
   66          | expression


Terminals, with rules where they appear

$end (0) 0
error (256) 8 18 33 39
ENDFILE (258)
ERROR (259)
ELSE (260) 32
IF (261) 31 32
INT (262) 9
RETURN (263) 35 36
VOID (264) 10 13
WHILE (265) 34
ID (266) 6 7 11 16 17 40 41 62
NUM (267) 7 61
PLUS (268) 52
MINUS (269) 53
MULTI (270) 56
DIVIDE (271) 57
LT (272) 44
GT (273) 45
LE (274) 46
GE (275) 47
EQ (276) 48
NE (277) 49
ASSIGN (278) 37
SEMICLN (279) 6 7 8 29 30 35 36
COMMA (280) 14 65
LPAREN (281) 11 31 32 34 58 62
RPAREN (282) 11 31 32 34 58 62
LBRACKET (283) 7 17 41
RBRACKET (284) 7 17 41
LBRACE (285) 19
RBRACE (286) 19
OPENCOMMENT (287)
CLOSECOMMENT (288)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
declaration_list (36)
    on left: 2 3, on right: 1 2
declaration (37)
    on left: 4 5, on right: 2 3
var_declaration (38)
    on left: 6 7 8, on right: 4 20
type_specifier (39)
    on left: 9 10, on right: 6 7 8 11 16 17
func_declaration (40)
    on left: 11, on right: 5
params (41)
    on left: 12 13, on right: 11
param_list (42)
    on left: 14 15, on right: 12 14
param (43)
    on left: 16 17 18, on right: 14 15
compound_stmt (44)
    on left: 19, on right: 11 25
local_declarations (45)
    on left: 20 21, on right: 19 20
statement_list (46)
    on left: 22 23, on right: 19 22
statement (47)
    on left: 24 25 26 27 28, on right: 22 31 32 34
expression_stmt (48)
    on left: 29 30, on right: 24
selection_stmt (49)
    on left: 31 32 33, on right: 26
iteration_stmt (50)
    on left: 34, on right: 27
return_stmt (51)
    on left: 35 36, on right: 28
expression (52)
    on left: 37 38 39, on right: 29 31 32 34 36 37 41 58 65 66
var (53)
    on left: 40 41, on right: 37 59
simple_expression (54)
    on left: 42 43, on right: 38
relop (55)
    on left: 44 45 46 47 48 49, on right: 42
additive_expression (56)
    on left: 50 51, on right: 42 43 50
addop (57)
    on left: 52 53, on right: 50
term (58)
    on left: 54 55, on right: 50 51 54
mulop (59)
    on left: 56 57, on right: 54
factor (60)
    on left: 58 59 60 61, on right: 54 55
call (61)
    on left: 62, on right: 60
args (62)
    on left: 63 64, on right: 62
args_list (63)
    on left: 65 66, on right: 63 65


state 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    func_declaration  go to state 8


state 1

    9 type_specifier: INT .

    $default  reduce using rule 9 (type_specifier)


state 2

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 9


state 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration       go to state 10
    var_declaration   go to state 6
    type_specifier    go to state 7
    func_declaration  go to state 8


state 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


state 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


state 7

    6 var_declaration: type_specifier . ID SEMICLN
    7                | type_specifier . ID LBRACKET NUM RBRACKET SEMICLN
    8                | type_specifier . error SEMICLN
   11 func_declaration: type_specifier . ID LPAREN params RPAREN compound_stmt

    error  shift, and go to state 11
    ID     shift, and go to state 12


state 8

    5 declaration: func_declaration .

    $default  reduce using rule 5 (declaration)


state 9

    0 $accept: program $end .

    $default  accept


state 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


state 11

    8 var_declaration: type_specifier error . SEMICLN

    SEMICLN  shift, and go to state 13


state 12

    6 var_declaration: type_specifier ID . SEMICLN
    7                | type_specifier ID . LBRACKET NUM RBRACKET SEMICLN
   11 func_declaration: type_specifier ID . LPAREN params RPAREN compound_stmt

    SEMICLN   shift, and go to state 14
    LPAREN    shift, and go to state 15
    LBRACKET  shift, and go to state 16


state 13

    8 var_declaration: type_specifier error SEMICLN .

    $default  reduce using rule 8 (var_declaration)


state 14

    6 var_declaration: type_specifier ID SEMICLN .

    $default  reduce using rule 6 (var_declaration)


state 15

   11 func_declaration: type_specifier ID LPAREN . params RPAREN compound_stmt

    error  shift, and go to state 17
    INT    shift, and go to state 1
    VOID   shift, and go to state 18

    type_specifier  go to state 19
    params          go to state 20
    param_list      go to state 21
    param           go to state 22


state 16

    7 var_declaration: type_specifier ID LBRACKET . NUM RBRACKET SEMICLN

    NUM  shift, and go to state 23


state 17

   18 param: error .

    $default  reduce using rule 18 (param)


state 18

   10 type_specifier: VOID .
   13 params: VOID .

    RPAREN    reduce using rule 13 (params)
    $default  reduce using rule 10 (type_specifier)


state 19

   16 param: type_specifier . ID
   17      | type_specifier . ID LBRACKET RBRACKET

    ID  shift, and go to state 24


state 20

   11 func_declaration: type_specifier ID LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 25


state 21

   12 params: param_list .
   14 param_list: param_list . COMMA param

    COMMA  shift, and go to state 26

    $default  reduce using rule 12 (params)


state 22

   15 param_list: param .

    $default  reduce using rule 15 (param_list)


state 23

    7 var_declaration: type_specifier ID LBRACKET NUM . RBRACKET SEMICLN

    RBRACKET  shift, and go to state 27


state 24

   16 param: type_specifier ID .
   17      | type_specifier ID . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 28

    $default  reduce using rule 16 (param)


state 25

   11 func_declaration: type_specifier ID LPAREN params RPAREN . compound_stmt

    LBRACE  shift, and go to state 29

    compound_stmt  go to state 30


state 26

   14 param_list: param_list COMMA . param

    error  shift, and go to state 17
    INT    shift, and go to state 1
    VOID   shift, and go to state 2

    type_specifier  go to state 19
    param           go to state 31


state 27

    7 var_declaration: type_specifier ID LBRACKET NUM RBRACKET . SEMICLN

    SEMICLN  shift, and go to state 32


state 28

   17 param: type_specifier ID LBRACKET . RBRACKET

    RBRACKET  shift, and go to state 33


state 29

   19 compound_stmt: LBRACE . local_declarations statement_list RBRACE

    $default  reduce using rule 21 (local_declarations)

    local_declarations  go to state 34


state 30

   11 func_declaration: type_specifier ID LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 11 (func_declaration)


state 31

   14 param_list: param_list COMMA param .

    $default  reduce using rule 14 (param_list)


state 32

    7 var_declaration: type_specifier ID LBRACKET NUM RBRACKET SEMICLN .

    $default  reduce using rule 7 (var_declaration)


state 33

   17 param: type_specifier ID LBRACKET RBRACKET .

    $default  reduce using rule 17 (param)


state 34

   19 compound_stmt: LBRACE local_declarations . statement_list RBRACE
   20 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 23 (statement_list)

    var_declaration  go to state 35
    type_specifier   go to state 36
    statement_list   go to state 37


state 35

   20 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 20 (local_declarations)


state 36

    6 var_declaration: type_specifier . ID SEMICLN
    7                | type_specifier . ID LBRACKET NUM RBRACKET SEMICLN
    8                | type_specifier . error SEMICLN

    error  shift, and go to state 11
    ID     shift, and go to state 38


state 37

   19 compound_stmt: LBRACE local_declarations statement_list . RBRACE
   22 statement_list: statement_list . statement

    error    shift, and go to state 39
    IF       shift, and go to state 40
    RETURN   shift, and go to state 41
    WHILE    shift, and go to state 42
    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    SEMICLN  shift, and go to state 45
    LPAREN   shift, and go to state 46
    LBRACE   shift, and go to state 29
    RBRACE   shift, and go to state 47

    compound_stmt        go to state 48
    statement            go to state 49
    expression_stmt      go to state 50
    selection_stmt       go to state 51
    iteration_stmt       go to state 52
    return_stmt          go to state 53
    expression           go to state 54
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 38

    6 var_declaration: type_specifier ID . SEMICLN
    7                | type_specifier ID . LBRACKET NUM RBRACKET SEMICLN

    SEMICLN   shift, and go to state 14
    LBRACKET  shift, and go to state 16


state 39

   33 selection_stmt: error .
   39 expression: error .

    SEMICLN   reduce using rule 33 (selection_stmt)
    SEMICLN   [reduce using rule 39 (expression)]
    $default  reduce using rule 33 (selection_stmt)


state 40

   31 selection_stmt: IF . LPAREN expression RPAREN statement
   32               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 61


state 41

   35 return_stmt: RETURN . SEMICLN
   36            | RETURN . expression SEMICLN

    error    shift, and go to state 62
    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    SEMICLN  shift, and go to state 63
    LPAREN   shift, and go to state 46

    expression           go to state 64
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 42

   34 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 65


state 43

   40 var: ID .
   41    | ID . LBRACKET expression RBRACKET
   62 call: ID . LPAREN args RPAREN

    LPAREN    shift, and go to state 66
    LBRACKET  shift, and go to state 67

    $default  reduce using rule 40 (var)


state 44

   61 factor: NUM .

    $default  reduce using rule 61 (factor)


state 45

   30 expression_stmt: SEMICLN .

    $default  reduce using rule 30 (expression_stmt)


state 46

   58 factor: LPAREN . expression RPAREN

    error   shift, and go to state 62
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 46

    expression           go to state 68
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 47

   19 compound_stmt: LBRACE local_declarations statement_list RBRACE .

    $default  reduce using rule 19 (compound_stmt)


state 48

   25 statement: compound_stmt .

    $default  reduce using rule 25 (statement)


state 49

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


state 50

   24 statement: expression_stmt .

    $default  reduce using rule 24 (statement)


state 51

   26 statement: selection_stmt .

    $default  reduce using rule 26 (statement)


state 52

   27 statement: iteration_stmt .

    $default  reduce using rule 27 (statement)


state 53

   28 statement: return_stmt .

    $default  reduce using rule 28 (statement)


state 54

   29 expression_stmt: expression . SEMICLN

    SEMICLN  shift, and go to state 69


state 55

   37 expression: var . ASSIGN expression
   59 factor: var .

    ASSIGN  shift, and go to state 70

    $default  reduce using rule 59 (factor)


state 56

   38 expression: simple_expression .

    $default  reduce using rule 38 (expression)


state 57

   42 simple_expression: additive_expression . relop additive_expression
   43                  | additive_expression .
   50 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72
    LT     shift, and go to state 73
    GT     shift, and go to state 74
    LE     shift, and go to state 75
    GE     shift, and go to state 76
    EQ     shift, and go to state 77
    NE     shift, and go to state 78

    $default  reduce using rule 43 (simple_expression)

    relop  go to state 79
    addop  go to state 80


state 58

   51 additive_expression: term .
   54 term: term . mulop factor

    MULTI   shift, and go to state 81
    DIVIDE  shift, and go to state 82

    $default  reduce using rule 51 (additive_expression)

    mulop  go to state 83


state 59

   55 term: factor .

    $default  reduce using rule 55 (term)


state 60

   60 factor: call .

    $default  reduce using rule 60 (factor)


state 61

   31 selection_stmt: IF LPAREN . expression RPAREN statement
   32               | IF LPAREN . expression RPAREN statement ELSE statement

    error   shift, and go to state 62
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 46

    expression           go to state 84
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 62

   39 expression: error .

    $default  reduce using rule 39 (expression)


state 63

   35 return_stmt: RETURN SEMICLN .

    $default  reduce using rule 35 (return_stmt)


state 64

   36 return_stmt: RETURN expression . SEMICLN

    SEMICLN  shift, and go to state 85


state 65

   34 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    error   shift, and go to state 62
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 46

    expression           go to state 86
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 66

   62 call: ID LPAREN . args RPAREN

    error   shift, and go to state 62
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 46

    RPAREN  reduce using rule 64 (args)

    expression           go to state 87
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60
    args                 go to state 88
    args_list            go to state 89


state 67

   41 var: ID LBRACKET . expression RBRACKET

    error   shift, and go to state 62
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 46

    expression           go to state 90
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 68

   58 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 91


state 69

   29 expression_stmt: expression SEMICLN .

    $default  reduce using rule 29 (expression_stmt)


state 70

   37 expression: var ASSIGN . expression

    error   shift, and go to state 62
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 46

    expression           go to state 92
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 71

   52 addop: PLUS .

    $default  reduce using rule 52 (addop)


state 72

   53 addop: MINUS .

    $default  reduce using rule 53 (addop)


state 73

   44 relop: LT .

    $default  reduce using rule 44 (relop)


state 74

   45 relop: GT .

    $default  reduce using rule 45 (relop)


state 75

   46 relop: LE .

    $default  reduce using rule 46 (relop)


state 76

   47 relop: GE .

    $default  reduce using rule 47 (relop)


state 77

   48 relop: EQ .

    $default  reduce using rule 48 (relop)


state 78

   49 relop: NE .

    $default  reduce using rule 49 (relop)


state 79

   42 simple_expression: additive_expression relop . additive_expression

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 46

    var                  go to state 93
    additive_expression  go to state 94
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 80

   50 additive_expression: additive_expression addop . term

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 46

    var     go to state 93
    term    go to state 95
    factor  go to state 59
    call    go to state 60


state 81

   56 mulop: MULTI .

    $default  reduce using rule 56 (mulop)


state 82

   57 mulop: DIVIDE .

    $default  reduce using rule 57 (mulop)


state 83

   54 term: term mulop . factor

    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 46

    var     go to state 93
    factor  go to state 96
    call    go to state 60


state 84

   31 selection_stmt: IF LPAREN expression . RPAREN statement
   32               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 97


state 85

   36 return_stmt: RETURN expression SEMICLN .

    $default  reduce using rule 36 (return_stmt)


state 86

   34 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 98


state 87

   66 args_list: expression .

    $default  reduce using rule 66 (args_list)


state 88

   62 call: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 99


state 89

   63 args: args_list .
   65 args_list: args_list . COMMA expression

    COMMA  shift, and go to state 100

    $default  reduce using rule 63 (args)


state 90

   41 var: ID LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 101


state 91

   58 factor: LPAREN expression RPAREN .

    $default  reduce using rule 58 (factor)


state 92

   37 expression: var ASSIGN expression .

    $default  reduce using rule 37 (expression)


state 93

   59 factor: var .

    $default  reduce using rule 59 (factor)


state 94

   42 simple_expression: additive_expression relop additive_expression .
   50 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 71
    MINUS  shift, and go to state 72

    $default  reduce using rule 42 (simple_expression)

    addop  go to state 80


state 95

   50 additive_expression: additive_expression addop term .
   54 term: term . mulop factor

    MULTI   shift, and go to state 81
    DIVIDE  shift, and go to state 82

    $default  reduce using rule 50 (additive_expression)

    mulop  go to state 83


state 96

   54 term: term mulop factor .

    $default  reduce using rule 54 (term)


state 97

   31 selection_stmt: IF LPAREN expression RPAREN . statement
   32               | IF LPAREN expression RPAREN . statement ELSE statement

    error    shift, and go to state 39
    IF       shift, and go to state 40
    RETURN   shift, and go to state 41
    WHILE    shift, and go to state 42
    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    SEMICLN  shift, and go to state 45
    LPAREN   shift, and go to state 46
    LBRACE   shift, and go to state 29

    compound_stmt        go to state 48
    statement            go to state 102
    expression_stmt      go to state 50
    selection_stmt       go to state 51
    iteration_stmt       go to state 52
    return_stmt          go to state 53
    expression           go to state 54
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 98

   34 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    error    shift, and go to state 39
    IF       shift, and go to state 40
    RETURN   shift, and go to state 41
    WHILE    shift, and go to state 42
    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    SEMICLN  shift, and go to state 45
    LPAREN   shift, and go to state 46
    LBRACE   shift, and go to state 29

    compound_stmt        go to state 48
    statement            go to state 103
    expression_stmt      go to state 50
    selection_stmt       go to state 51
    iteration_stmt       go to state 52
    return_stmt          go to state 53
    expression           go to state 54
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 99

   62 call: ID LPAREN args RPAREN .

    $default  reduce using rule 62 (call)


state 100

   65 args_list: args_list COMMA . expression

    error   shift, and go to state 62
    ID      shift, and go to state 43
    NUM     shift, and go to state 44
    LPAREN  shift, and go to state 46

    expression           go to state 104
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 101

   41 var: ID LBRACKET expression RBRACKET .

    $default  reduce using rule 41 (var)


state 102

   31 selection_stmt: IF LPAREN expression RPAREN statement .
   32               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 105

    ELSE      [reduce using rule 31 (selection_stmt)]
    $default  reduce using rule 31 (selection_stmt)


state 103

   34 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 34 (iteration_stmt)


state 104

   65 args_list: args_list COMMA expression .

    $default  reduce using rule 65 (args_list)


state 105

   32 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    error    shift, and go to state 39
    IF       shift, and go to state 40
    RETURN   shift, and go to state 41
    WHILE    shift, and go to state 42
    ID       shift, and go to state 43
    NUM      shift, and go to state 44
    SEMICLN  shift, and go to state 45
    LPAREN   shift, and go to state 46
    LBRACE   shift, and go to state 29

    compound_stmt        go to state 48
    statement            go to state 106
    expression_stmt      go to state 50
    selection_stmt       go to state 51
    iteration_stmt       go to state 52
    return_stmt          go to state 53
    expression           go to state 54
    var                  go to state 55
    simple_expression    go to state 56
    additive_expression  go to state 57
    term                 go to state 58
    factor               go to state 59
    call                 go to state 60


state 106

   32 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 32 (selection_stmt)
