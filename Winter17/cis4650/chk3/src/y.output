Terminals unused in grammar

   ENDFILE
   ERROR
   OPENCOMMENT
   CLOSECOMMENT


State 35 conflicts: 1 shift/reduce
State 40 conflicts: 1 reduce/reduce
State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | func_declaration

    6 var_declaration: type_specifier ID SEMICLN
    7                | type_specifier ID LBRACKET NUM RBRACKET SEMICLN
    8                | type_specifier error SEMICLN

    9 type_specifier: INT
   10               | VOID
   11               | error

   12 func_declaration: type_specifier ID LPAREN params RPAREN compound_stmt

   13 params: param_list
   14       | VOID

   15 param_list: param_list COMMA param
   16           | param

   17 param: type_specifier ID
   18      | type_specifier ID LBRACKET RBRACKET
   19      | error

   20 compound_stmt: LBRACE local_declarations statement_list RBRACE

   21 local_declarations: local_declarations var_declaration
   22                   | /* empty */

   23 statement_list: statement_list statement
   24               | /* empty */

   25 statement: expression_stmt
   26          | compound_stmt
   27          | selection_stmt
   28          | iteration_stmt
   29          | return_stmt

   30 expression_stmt: expression SEMICLN
   31                | SEMICLN

   32 selection_stmt: IF LPAREN expression RPAREN statement
   33               | IF LPAREN expression RPAREN statement ELSE statement
   34               | error

   35 iteration_stmt: WHILE LPAREN expression RPAREN statement

   36 return_stmt: RETURN SEMICLN
   37            | RETURN expression SEMICLN

   38 expression: var ASSIGN expression
   39           | simple_expression
   40           | error

   41 var: ID
   42    | ID LBRACKET expression RBRACKET

   43 simple_expression: additive_expression relop additive_expression
   44                  | additive_expression

   45 relop: LT
   46      | GT
   47      | LE
   48      | GE
   49      | EQ
   50      | NE

   51 additive_expression: additive_expression addop term
   52                    | term

   53 addop: PLUS
   54      | MINUS

   55 term: term mulop factor
   56     | factor

   57 mulop: MULTI
   58      | DIVIDE

   59 factor: LPAREN expression RPAREN
   60       | var
   61       | call
   62       | NUM

   63 call: ID LPAREN args RPAREN

   64 args: args_list
   65     | /* empty */

   66 args_list: args_list COMMA expression
   67          | expression


Terminals, with rules where they appear

$end (0) 0
error (256) 8 11 19 34 40
ENDFILE (258)
ERROR (259)
ELSE (260) 33
IF (261) 32 33
INT (262) 9
RETURN (263) 36 37
VOID (264) 10 14
WHILE (265) 35
ID (266) 6 7 12 17 18 41 42 63
NUM (267) 7 62
PLUS (268) 53
MINUS (269) 54
MULTI (270) 57
DIVIDE (271) 58
LT (272) 45
GT (273) 46
LE (274) 47
GE (275) 48
EQ (276) 49
NE (277) 50
ASSIGN (278) 38
SEMICLN (279) 6 7 8 30 31 36 37
COMMA (280) 15 66
LPAREN (281) 12 32 33 35 59 63
RPAREN (282) 12 32 33 35 59 63
LBRACKET (283) 7 18 42
RBRACKET (284) 7 18 42
LBRACE (285) 20
RBRACE (286) 20
OPENCOMMENT (287)
CLOSECOMMENT (288)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
declaration_list (36)
    on left: 2 3, on right: 1 2
declaration (37)
    on left: 4 5, on right: 2 3
var_declaration (38)
    on left: 6 7 8, on right: 4 21
type_specifier (39)
    on left: 9 10 11, on right: 6 7 8 12 17 18
func_declaration (40)
    on left: 12, on right: 5
params (41)
    on left: 13 14, on right: 12
param_list (42)
    on left: 15 16, on right: 13 15
param (43)
    on left: 17 18 19, on right: 15 16
compound_stmt (44)
    on left: 20, on right: 12 26
local_declarations (45)
    on left: 21 22, on right: 20 21
statement_list (46)
    on left: 23 24, on right: 20 23
statement (47)
    on left: 25 26 27 28 29, on right: 23 32 33 35
expression_stmt (48)
    on left: 30 31, on right: 25
selection_stmt (49)
    on left: 32 33 34, on right: 27
iteration_stmt (50)
    on left: 35, on right: 28
return_stmt (51)
    on left: 36 37, on right: 29
expression (52)
    on left: 38 39 40, on right: 30 32 33 35 37 38 42 59 66 67
var (53)
    on left: 41 42, on right: 38 60
simple_expression (54)
    on left: 43 44, on right: 39
relop (55)
    on left: 45 46 47 48 49 50, on right: 43
additive_expression (56)
    on left: 51 52, on right: 43 44 51
addop (57)
    on left: 53 54, on right: 51
term (58)
    on left: 55 56, on right: 51 52 55
mulop (59)
    on left: 57 58, on right: 55
factor (60)
    on left: 59 60 61 62, on right: 55 56
call (61)
    on left: 63, on right: 61
args (62)
    on left: 64 65, on right: 63
args_list (63)
    on left: 66 67, on right: 64 66


state 0

    0 $accept: . program $end

    error  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    program           go to state 4
    declaration_list  go to state 5
    declaration       go to state 6
    var_declaration   go to state 7
    type_specifier    go to state 8
    func_declaration  go to state 9


state 1

   11 type_specifier: error .

    $default  reduce using rule 11 (type_specifier)


state 2

    9 type_specifier: INT .

    $default  reduce using rule 9 (type_specifier)


state 3

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 10


state 5

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    error  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    $end  reduce using rule 1 (program)

    declaration       go to state 11
    var_declaration   go to state 7
    type_specifier    go to state 8
    func_declaration  go to state 9


state 6

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


state 7

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


state 8

    6 var_declaration: type_specifier . ID SEMICLN
    7                | type_specifier . ID LBRACKET NUM RBRACKET SEMICLN
    8                | type_specifier . error SEMICLN
   12 func_declaration: type_specifier . ID LPAREN params RPAREN compound_stmt

    error  shift, and go to state 12
    ID     shift, and go to state 13


state 9

    5 declaration: func_declaration .

    $default  reduce using rule 5 (declaration)


state 10

    0 $accept: program $end .

    $default  accept


state 11

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


state 12

    8 var_declaration: type_specifier error . SEMICLN

    SEMICLN  shift, and go to state 14


state 13

    6 var_declaration: type_specifier ID . SEMICLN
    7                | type_specifier ID . LBRACKET NUM RBRACKET SEMICLN
   12 func_declaration: type_specifier ID . LPAREN params RPAREN compound_stmt

    SEMICLN   shift, and go to state 15
    LPAREN    shift, and go to state 16
    LBRACKET  shift, and go to state 17


state 14

    8 var_declaration: type_specifier error SEMICLN .

    $default  reduce using rule 8 (var_declaration)


state 15

    6 var_declaration: type_specifier ID SEMICLN .

    $default  reduce using rule 6 (var_declaration)


state 16

   12 func_declaration: type_specifier ID LPAREN . params RPAREN compound_stmt

    error  shift, and go to state 18
    INT    shift, and go to state 2
    VOID   shift, and go to state 19

    type_specifier  go to state 20
    params          go to state 21
    param_list      go to state 22
    param           go to state 23


state 17

    7 var_declaration: type_specifier ID LBRACKET . NUM RBRACKET SEMICLN

    NUM  shift, and go to state 24


state 18

   11 type_specifier: error .
   19 param: error .

    ID        reduce using rule 11 (type_specifier)
    $default  reduce using rule 19 (param)


state 19

   10 type_specifier: VOID .
   14 params: VOID .

    RPAREN    reduce using rule 14 (params)
    $default  reduce using rule 10 (type_specifier)


state 20

   17 param: type_specifier . ID
   18      | type_specifier . ID LBRACKET RBRACKET

    ID  shift, and go to state 25


state 21

   12 func_declaration: type_specifier ID LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 26


state 22

   13 params: param_list .
   15 param_list: param_list . COMMA param

    COMMA  shift, and go to state 27

    $default  reduce using rule 13 (params)


state 23

   16 param_list: param .

    $default  reduce using rule 16 (param_list)


state 24

    7 var_declaration: type_specifier ID LBRACKET NUM . RBRACKET SEMICLN

    RBRACKET  shift, and go to state 28


state 25

   17 param: type_specifier ID .
   18      | type_specifier ID . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 29

    $default  reduce using rule 17 (param)


state 26

   12 func_declaration: type_specifier ID LPAREN params RPAREN . compound_stmt

    LBRACE  shift, and go to state 30

    compound_stmt  go to state 31


state 27

   15 param_list: param_list COMMA . param

    error  shift, and go to state 18
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 20
    param           go to state 32


state 28

    7 var_declaration: type_specifier ID LBRACKET NUM RBRACKET . SEMICLN

    SEMICLN  shift, and go to state 33


state 29

   18 param: type_specifier ID LBRACKET . RBRACKET

    RBRACKET  shift, and go to state 34


state 30

   20 compound_stmt: LBRACE . local_declarations statement_list RBRACE

    $default  reduce using rule 22 (local_declarations)

    local_declarations  go to state 35


state 31

   12 func_declaration: type_specifier ID LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 12 (func_declaration)


state 32

   15 param_list: param_list COMMA param .

    $default  reduce using rule 15 (param_list)


state 33

    7 var_declaration: type_specifier ID LBRACKET NUM RBRACKET SEMICLN .

    $default  reduce using rule 7 (var_declaration)


state 34

   18 param: type_specifier ID LBRACKET RBRACKET .

    $default  reduce using rule 18 (param)


state 35

   20 compound_stmt: LBRACE local_declarations . statement_list RBRACE
   21 local_declarations: local_declarations . var_declaration

    error  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    error    [reduce using rule 24 (statement_list)]
    IF       reduce using rule 24 (statement_list)
    RETURN   reduce using rule 24 (statement_list)
    WHILE    reduce using rule 24 (statement_list)
    ID       reduce using rule 24 (statement_list)
    NUM      reduce using rule 24 (statement_list)
    SEMICLN  reduce using rule 24 (statement_list)
    LPAREN   reduce using rule 24 (statement_list)
    LBRACE   reduce using rule 24 (statement_list)
    RBRACE   reduce using rule 24 (statement_list)

    var_declaration  go to state 36
    type_specifier   go to state 37
    statement_list   go to state 38


state 36

   21 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 21 (local_declarations)


state 37

    6 var_declaration: type_specifier . ID SEMICLN
    7                | type_specifier . ID LBRACKET NUM RBRACKET SEMICLN
    8                | type_specifier . error SEMICLN

    error  shift, and go to state 12
    ID     shift, and go to state 39


state 38

   20 compound_stmt: LBRACE local_declarations statement_list . RBRACE
   23 statement_list: statement_list . statement

    error    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    WHILE    shift, and go to state 43
    ID       shift, and go to state 44
    NUM      shift, and go to state 45
    SEMICLN  shift, and go to state 46
    LPAREN   shift, and go to state 47
    LBRACE   shift, and go to state 30
    RBRACE   shift, and go to state 48

    compound_stmt        go to state 49
    statement            go to state 50
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 39

    6 var_declaration: type_specifier ID . SEMICLN
    7                | type_specifier ID . LBRACKET NUM RBRACKET SEMICLN

    SEMICLN   shift, and go to state 15
    LBRACKET  shift, and go to state 17


state 40

   34 selection_stmt: error .
   40 expression: error .

    SEMICLN   reduce using rule 34 (selection_stmt)
    SEMICLN   [reduce using rule 40 (expression)]
    $default  reduce using rule 34 (selection_stmt)


state 41

   32 selection_stmt: IF . LPAREN expression RPAREN statement
   33               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 62


state 42

   36 return_stmt: RETURN . SEMICLN
   37            | RETURN . expression SEMICLN

    error    shift, and go to state 63
    ID       shift, and go to state 44
    NUM      shift, and go to state 45
    SEMICLN  shift, and go to state 64
    LPAREN   shift, and go to state 47

    expression           go to state 65
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 43

   35 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 66


state 44

   41 var: ID .
   42    | ID . LBRACKET expression RBRACKET
   63 call: ID . LPAREN args RPAREN

    LPAREN    shift, and go to state 67
    LBRACKET  shift, and go to state 68

    $default  reduce using rule 41 (var)


state 45

   62 factor: NUM .

    $default  reduce using rule 62 (factor)


state 46

   31 expression_stmt: SEMICLN .

    $default  reduce using rule 31 (expression_stmt)


state 47

   59 factor: LPAREN . expression RPAREN

    error   shift, and go to state 63
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    expression           go to state 69
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 48

   20 compound_stmt: LBRACE local_declarations statement_list RBRACE .

    $default  reduce using rule 20 (compound_stmt)


state 49

   26 statement: compound_stmt .

    $default  reduce using rule 26 (statement)


state 50

   23 statement_list: statement_list statement .

    $default  reduce using rule 23 (statement_list)


state 51

   25 statement: expression_stmt .

    $default  reduce using rule 25 (statement)


state 52

   27 statement: selection_stmt .

    $default  reduce using rule 27 (statement)


state 53

   28 statement: iteration_stmt .

    $default  reduce using rule 28 (statement)


state 54

   29 statement: return_stmt .

    $default  reduce using rule 29 (statement)


state 55

   30 expression_stmt: expression . SEMICLN

    SEMICLN  shift, and go to state 70


state 56

   38 expression: var . ASSIGN expression
   60 factor: var .

    ASSIGN  shift, and go to state 71

    $default  reduce using rule 60 (factor)


state 57

   39 expression: simple_expression .

    $default  reduce using rule 39 (expression)


state 58

   43 simple_expression: additive_expression . relop additive_expression
   44                  | additive_expression .
   51 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73
    LT     shift, and go to state 74
    GT     shift, and go to state 75
    LE     shift, and go to state 76
    GE     shift, and go to state 77
    EQ     shift, and go to state 78
    NE     shift, and go to state 79

    $default  reduce using rule 44 (simple_expression)

    relop  go to state 80
    addop  go to state 81


state 59

   52 additive_expression: term .
   55 term: term . mulop factor

    MULTI   shift, and go to state 82
    DIVIDE  shift, and go to state 83

    $default  reduce using rule 52 (additive_expression)

    mulop  go to state 84


state 60

   56 term: factor .

    $default  reduce using rule 56 (term)


state 61

   61 factor: call .

    $default  reduce using rule 61 (factor)


state 62

   32 selection_stmt: IF LPAREN . expression RPAREN statement
   33               | IF LPAREN . expression RPAREN statement ELSE statement

    error   shift, and go to state 63
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    expression           go to state 85
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 63

   40 expression: error .

    $default  reduce using rule 40 (expression)


state 64

   36 return_stmt: RETURN SEMICLN .

    $default  reduce using rule 36 (return_stmt)


state 65

   37 return_stmt: RETURN expression . SEMICLN

    SEMICLN  shift, and go to state 86


state 66

   35 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    error   shift, and go to state 63
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    expression           go to state 87
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 67

   63 call: ID LPAREN . args RPAREN

    error   shift, and go to state 63
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    RPAREN  reduce using rule 65 (args)

    expression           go to state 88
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61
    args                 go to state 89
    args_list            go to state 90


state 68

   42 var: ID LBRACKET . expression RBRACKET

    error   shift, and go to state 63
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    expression           go to state 91
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 69

   59 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 92


state 70

   30 expression_stmt: expression SEMICLN .

    $default  reduce using rule 30 (expression_stmt)


state 71

   38 expression: var ASSIGN . expression

    error   shift, and go to state 63
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    expression           go to state 93
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 72

   53 addop: PLUS .

    $default  reduce using rule 53 (addop)


state 73

   54 addop: MINUS .

    $default  reduce using rule 54 (addop)


state 74

   45 relop: LT .

    $default  reduce using rule 45 (relop)


state 75

   46 relop: GT .

    $default  reduce using rule 46 (relop)


state 76

   47 relop: LE .

    $default  reduce using rule 47 (relop)


state 77

   48 relop: GE .

    $default  reduce using rule 48 (relop)


state 78

   49 relop: EQ .

    $default  reduce using rule 49 (relop)


state 79

   50 relop: NE .

    $default  reduce using rule 50 (relop)


state 80

   43 simple_expression: additive_expression relop . additive_expression

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var                  go to state 94
    additive_expression  go to state 95
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 81

   51 additive_expression: additive_expression addop . term

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var     go to state 94
    term    go to state 96
    factor  go to state 60
    call    go to state 61


state 82

   57 mulop: MULTI .

    $default  reduce using rule 57 (mulop)


state 83

   58 mulop: DIVIDE .

    $default  reduce using rule 58 (mulop)


state 84

   55 term: term mulop . factor

    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    var     go to state 94
    factor  go to state 97
    call    go to state 61


state 85

   32 selection_stmt: IF LPAREN expression . RPAREN statement
   33               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 98


state 86

   37 return_stmt: RETURN expression SEMICLN .

    $default  reduce using rule 37 (return_stmt)


state 87

   35 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 99


state 88

   67 args_list: expression .

    $default  reduce using rule 67 (args_list)


state 89

   63 call: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 100


state 90

   64 args: args_list .
   66 args_list: args_list . COMMA expression

    COMMA  shift, and go to state 101

    $default  reduce using rule 64 (args)


state 91

   42 var: ID LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 102


state 92

   59 factor: LPAREN expression RPAREN .

    $default  reduce using rule 59 (factor)


state 93

   38 expression: var ASSIGN expression .

    $default  reduce using rule 38 (expression)


state 94

   60 factor: var .

    $default  reduce using rule 60 (factor)


state 95

   43 simple_expression: additive_expression relop additive_expression .
   51 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 72
    MINUS  shift, and go to state 73

    $default  reduce using rule 43 (simple_expression)

    addop  go to state 81


state 96

   51 additive_expression: additive_expression addop term .
   55 term: term . mulop factor

    MULTI   shift, and go to state 82
    DIVIDE  shift, and go to state 83

    $default  reduce using rule 51 (additive_expression)

    mulop  go to state 84


state 97

   55 term: term mulop factor .

    $default  reduce using rule 55 (term)


state 98

   32 selection_stmt: IF LPAREN expression RPAREN . statement
   33               | IF LPAREN expression RPAREN . statement ELSE statement

    error    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    WHILE    shift, and go to state 43
    ID       shift, and go to state 44
    NUM      shift, and go to state 45
    SEMICLN  shift, and go to state 46
    LPAREN   shift, and go to state 47
    LBRACE   shift, and go to state 30

    compound_stmt        go to state 49
    statement            go to state 103
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 99

   35 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    error    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    WHILE    shift, and go to state 43
    ID       shift, and go to state 44
    NUM      shift, and go to state 45
    SEMICLN  shift, and go to state 46
    LPAREN   shift, and go to state 47
    LBRACE   shift, and go to state 30

    compound_stmt        go to state 49
    statement            go to state 104
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 100

   63 call: ID LPAREN args RPAREN .

    $default  reduce using rule 63 (call)


state 101

   66 args_list: args_list COMMA . expression

    error   shift, and go to state 63
    ID      shift, and go to state 44
    NUM     shift, and go to state 45
    LPAREN  shift, and go to state 47

    expression           go to state 105
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 102

   42 var: ID LBRACKET expression RBRACKET .

    $default  reduce using rule 42 (var)


state 103

   32 selection_stmt: IF LPAREN expression RPAREN statement .
   33               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 106

    ELSE      [reduce using rule 32 (selection_stmt)]
    $default  reduce using rule 32 (selection_stmt)


state 104

   35 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 35 (iteration_stmt)


state 105

   66 args_list: args_list COMMA expression .

    $default  reduce using rule 66 (args_list)


state 106

   33 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    error    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    WHILE    shift, and go to state 43
    ID       shift, and go to state 44
    NUM      shift, and go to state 45
    SEMICLN  shift, and go to state 46
    LPAREN   shift, and go to state 47
    LBRACE   shift, and go to state 30

    compound_stmt        go to state 49
    statement            go to state 107
    expression_stmt      go to state 51
    selection_stmt       go to state 52
    iteration_stmt       go to state 53
    return_stmt          go to state 54
    expression           go to state 55
    var                  go to state 56
    simple_expression    go to state 57
    additive_expression  go to state 58
    term                 go to state 59
    factor               go to state 60
    call                 go to state 61


state 107

   33 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 33 (selection_stmt)
